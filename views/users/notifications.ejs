<%- include('../layouts/main') %>

<div class="container-fluid">
    <div class="row">
        <!-- Sidebar -->
        <div class="col-md-3 col-lg-2 d-md-block sidebar collapse">
            <div class="position-sticky pt-3">
                <ul class="nav flex-column">
                    <li class="nav-item">
                        <a class="nav-link" href="/users/dashboard">
                            <i class="bi bi-speedometer2"></i>
                            Dashboard
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/users/profile">
                            <i class="bi bi-person"></i>
                            Profile
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/songs/upload">
                            <i class="bi bi-upload"></i>
                            Upload Song
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/songs?filter=my">
                            <i class="bi bi-music-note-list"></i>
                            My Songs
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/users/purchased">
                            <i class="bi bi-bag-check"></i>
                            Purchased Songs
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/users/referrals">
                            <i class="bi bi-share"></i>
                            Referrals
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link active" href="/users/notifications">
                            <i class="bi bi-bell"></i>
                            Notifications
                            <% if (unreadCount > 0) { %>
                                <span class="badge bg-danger rounded-pill ms-2"><%= unreadCount %></span>
                            <% } %>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/users/payment-accounts">
                            <i class="bi bi-credit-card"></i>
                            Payment Accounts
                        </a>
                    </li>
                </ul>
            </div>
        </div>

        <!-- Main content -->
        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
            <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                <h1 class="h2">
                    <i class="bi bi-bell me-2"></i>Notifications
                </h1>
                <div class="btn-toolbar mb-2 mb-md-0">
                    <% if (unreadCount > 0) { %>
                        <button type="button" class="btn btn-sm btn-outline-primary" onclick="markAllAsRead()">
                            <i class="bi bi-check-all me-1"></i>
                            Mark All as Read
                        </button>
                    <% } %>
                </div>
            </div>

            <% if (error) { %>
                <div class="alert alert-danger" role="alert">
                    <i class="bi bi-exclamation-triangle me-2"></i>
                    <%= error %>
                </div>
            <% } %>

            <!-- Notification Statistics -->
            <div class="row mb-4">
                <div class="col-md-4">
                    <div class="card bg-primary text-white">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h5 class="card-title">Total Notifications</h5>
                                    <h3 class="mb-0"><%= totalNotifications %></h3>
                                </div>
                                <div class="align-self-center">
                                    <i class="bi bi-bell-fill fs-2"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card bg-warning text-white">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h5 class="card-title">Unread</h5>
                                    <h3 class="mb-0"><%= unreadCount %></h3>
                                </div>
                                <div class="align-self-center">
                                    <i class="bi bi-exclamation-circle-fill fs-2"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card bg-success text-white">
                        <div class="card-body">
                            <div class="d-flex justify-content-between">
                                <div>
                                    <h5 class="card-title">Read</h5>
                                    <h3 class="mb-0"><%= totalNotifications - unreadCount %></h3>
                                </div>
                                <div class="align-self-center">
                                    <i class="bi bi-check-circle-fill fs-2"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Notifications List -->
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Your Notifications</h5>
                </div>
                <div class="card-body p-0">
                    <% if (notifications && notifications.length > 0) { %>
                        <div class="list-group list-group-flush">
                            <% notifications.forEach(function(notification) { %>
                                <div class="list-group-item list-group-item-action <%= !notification.is_read ? 'bg-light border-start border-primary border-3' : '' %>" 
                                     onclick="markAsRead(<%= notification.id %>)">
                                    <div class="d-flex w-100 justify-content-between align-items-start">
                                        <div class="flex-grow-1">
                                            <div class="d-flex align-items-center mb-1">
                                                <i class="bi <%= 
                                                    notification.type === 'sale' ? 'bi-cash-coin text-success' :
                                                    notification.type === 'purchase' ? 'bi-cart-check text-primary' :
                                                    notification.type === 'withdrawal' ? 'bi-bank text-warning' :
                                                    notification.type === 'referral' ? 'bi-share text-info' :
                                                    notification.type === 'success' ? 'bi-check-circle text-success' :
                                                    notification.type === 'error' ? 'bi-exclamation-triangle text-danger' :
                                                    notification.type === 'warning' ? 'bi-exclamation-triangle text-warning' :
                                                    notification.type === 'info' ? 'bi-info-circle text-info' :
                                                    'bi-bell text-info'
                                                %> me-2"></i>
                                                <h6 class="mb-0 <%= !notification.is_read ? 'fw-bold' : '' %>">
                                                    <%= notification.type.charAt(0).toUpperCase() + notification.type.slice(1) %> Notification
                                                </h6>
                                                <% if (!notification.is_read) { %>
                                                    <span class="badge bg-primary rounded-pill ms-2">New</span>
                                                <% } %>
                                            </div>
                                            <p class="mb-1 <%= !notification.is_read ? 'fw-semibold' : '' %>">
                                                <%= notification.message %>
                                            </p>
                                            <small class="text-muted">
                                                <i class="bi bi-clock me-1"></i>
                                                <%= new Date(notification.created_at).toLocaleDateString('en-US', { 
                                                    year: 'numeric', 
                                                    month: 'long', 
                                                    day: 'numeric', 
                                                    hour: '2-digit', 
                                                    minute: '2-digit' 
                                                }) %>
                                            </small>
                                        </div>
                                        <div class="ms-3">
                                            <% if (!notification.is_read) { %>
                                                <button class="btn btn-sm btn-outline-primary" onclick="event.stopPropagation(); markAsRead(<%= notification.id %>)">
                                                    <i class="bi bi-check"></i>
                                                </button>
                                            <% } else { %>
                                                <i class="bi bi-check-circle text-success"></i>
                                            <% } %>
                                        </div>
                                    </div>
                                </div>
                            <% }); %>
                        </div>
                    <% } else { %>
                        <div class="text-center py-5">
                            <i class="bi bi-bell-slash text-muted" style="font-size: 3rem;"></i>
                            <h5 class="mt-3 text-muted">No notifications yet</h5>
                            <p class="text-muted">You'll receive notifications here when there are updates about your songs, purchases, and earnings.</p>
                        </div>
                    <% } %>
                </div>
            </div>

            <!-- Pagination -->
            <% if (totalPages > 1) { %>
                <nav aria-label="Notifications pagination" class="mt-4">
                    <ul class="pagination justify-content-center">
                        <% if (currentPage > 1) { %>
                            <li class="page-item">
                                <a class="page-link" href="?page=<%= currentPage - 1 %>">
                                    <i class="bi bi-chevron-left"></i>
                                    Previous
                                </a>
                            </li>
                        <% } %>

                        <% 
                        let startPage = Math.max(1, currentPage - 2);
                        let endPage = Math.min(totalPages, currentPage + 2);
                        %>

                        <% if (startPage > 1) { %>
                            <li class="page-item">
                                <a class="page-link" href="?page=1">1</a>
                            </li>
                            <% if (startPage > 2) { %>
                                <li class="page-item disabled">
                                    <span class="page-link">...</span>
                                </li>
                            <% } %>
                        <% } %>

                        <% for (let i = startPage; i <= endPage; i++) { %>
                            <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                                <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                            </li>
                        <% } %>

                        <% if (endPage < totalPages) { %>
                            <% if (endPage < totalPages - 1) { %>
                                <li class="page-item disabled">
                                    <span class="page-link">...</span>
                                </li>
                            <% } %>
                            <li class="page-item">
                                <a class="page-link" href="?page=<%= totalPages %>"><%= totalPages %></a>
                            </li>
                        <% } %>

                        <% if (currentPage < totalPages) { %>
                            <li class="page-item">
                                <a class="page-link" href="?page=<%= currentPage + 1 %>">
                                    Next
                                    <i class="bi bi-chevron-right"></i>
                                </a>
                            </li>
                        <% } %>
                    </ul>
                </nav>
            <% } %>
        </main>
    </div>
</div>

<script>
// Function to get notification icon based on type
function getNotificationIcon(type) {
    switch (type) {
        case 'sale': return 'bi-cash-coin text-success';
        case 'purchase': return 'bi-cart-check text-primary';
        case 'withdrawal': return 'bi-bank text-warning';
        case 'referral': return 'bi-share text-info';
        case 'success': return 'bi-check-circle text-success';
        case 'error': return 'bi-exclamation-triangle text-danger';
        case 'warning': return 'bi-exclamation-triangle text-warning';
        case 'info': return 'bi-info-circle text-info';
        default: return 'bi-bell text-info';
    }
}

// Mark individual notification as read
async function markAsRead(notificationId) {
    try {
        const response = await fetch(`/api/notifications/${notificationId}/read`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        });
        
        if (response.ok) {
            // Reload the page to update the UI
            window.location.reload();
        } else {
            console.error('Failed to mark notification as read');
        }
    } catch (error) {
        console.error('Error marking notification as read:', error);
    }
}

// Mark all notifications as read
async function markAllAsRead() {
    try {
        const response = await fetch('/api/notifications/mark-all-read', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        });
        
        if (response.ok) {
            // Reload the page to update the UI
            window.location.reload();
        } else {
            console.error('Failed to mark all notifications as read');
        }
    } catch (error) {
        console.error('Error marking all notifications as read:', error);
    }
}

// Auto-refresh notifications every 30 seconds
setInterval(() => {        // Only refresh if user is on the first page to avoid disrupting pagination
        if (new URLSearchParams(window.location.search).get('page') === null || 
            new URLSearchParams(window.location.search).get('page') === '1') {
            // Check for new notifications without full page reload
            fetch('/api/notifications')
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const currentUnread = parseInt('<%= unreadCount || 0 %>');
                        const newUnread = data.notifications.filter(n => !n.is_read).length;
                        
                        // If there are new notifications, reload the page
                        if (newUnread > currentUnread) {
                            window.location.reload();
                        }
                    }
                })
                .catch(error => console.error('Error checking for new notifications:', error));
        }
}, 30000);
</script>

<style>
.sidebar {
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    z-index: 100;
    padding: 48px 0 0;
    box-shadow: inset -1px 0 0 rgba(0, 0, 0, .1);
}

.sidebar .nav-link {
    font-weight: 500;
    color: #333;
}

.sidebar .nav-link.active {
    color: #007bff;
    background-color: rgba(0, 123, 255, .1);
}

.sidebar .nav-link:hover {
    color: #007bff;
}

.list-group-item-action:hover {
    background-color: rgba(0, 123, 255, 0.05);
}

.border-start.border-primary {
    border-left-width: 4px !important;
}

@media (max-width: 767.98px) {
    .sidebar {
        position: static;
        padding: 0;
    }
}
</style>
